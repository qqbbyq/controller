<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=4 tabstop=4: -->
<!--
Copyright Â© 2016 cmcc,Inc and others. All rights reserved.

This program and the accompanying materials are made available under the
terms of the Eclipse Public License v1.0 which accompanies this distribution,
and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
  xmlns:odl="http://opendaylight.org/xmlns/blueprint/v1.0.0"
  odl:use-default-for-reference-types="true">

  <reference id="dataBroker"
    interface="org.opendaylight.controller.md.sal.binding.api.DataBroker"
    odl:type="default" />

  <bean id="provider" class="org.cmcc.aero.impl.GlobalRpcProvider" init-method="init"
        destroy-method="close">
    <argument ref="dataBroker" />
  </bean>

  <bean id="globalRpcClient" class="org.cmcc.aero.impl.rpc.GlobalRpcClient" scope="singleton">
    <argument ref="blueprintBundleContext"/>
  </bean>

  <reference id="entityOwnershipService"
             interface="org.opendaylight.controller.md.sal.common.api.clustering.EntityOwnershipService"/>
  <reference id="rpcRegistry" interface="org.opendaylight.controller.sal.binding.api.RpcProviderRegistry"/>
  <reference id="classLoadingStrategy"
             interface="org.opendaylight.yangtools.sal.binding.generator.api.ClassLoadingStrategy"/>

  <odl:rpc-service id="salFlowService" interface="org.opendaylight.yang.gen.v1.urn.opendaylight.flow.service.rev130819.SalFlowService"/>
  <odl:rpc-service id="salGroupService" interface="org.opendaylight.yang.gen.v1.urn.opendaylight.group.service.rev130918.SalGroupService"/>
  <odl:rpc-service id="salMeterService" interface="org.opendaylight.yang.gen.v1.urn.opendaylight.meter.service.rev130918.SalMeterService"/>

  <odl:rpc-service id="flowCapableTransactionService"
                   interface="org.opendaylight.yang.gen.v1.urn.opendaylight.flow.transaction.rev150304.FlowCapableTransactionService" />
  <bean id="batchFlowService" class="org.cmcc.aero.impl.ofRpcs.impl.OFFwdServiceImpl"
        factory-method="createFlowsBatchService">
    <argument ref="rpcRegistry" />
    <argument ref="salFlowService" />
    <argument ref="flowCapableTransactionService" />
  </bean>

  <bean id="batchGroupService" class="org.cmcc.aero.impl.ofRpcs.impl.OFFwdServiceImpl"
        factory-method="createGroupsBatchService">
    <argument ref="rpcRegistry" />
    <argument ref="salGroupService" />
    <argument ref="flowCapableTransactionService" />
  </bean>

  <bean id="batchMeterService" class="org.cmcc.aero.impl.ofRpcs.impl.OFFwdServiceImpl"
        factory-method="createMetersBatchService">
    <argument ref="rpcRegistry" />
    <argument ref="salMeterService" />
    <argument ref="flowCapableTransactionService" />
  </bean>

  <bean id="ofOwnerManager" class="org.cmcc.aero.impl.ofRpcs.impl.OFNodeMasterListener">
    <argument ref="entityOwnershipService" />
  </bean>

  <bean id="redisSvc" class="org.cmcc.aero.impl.ofRpcs.cache.RedisCacheService"
        factory-method="createInstance">
    <argument value="192.168.39.241" />
    <argument value="123456" />
    <argument type="java.lang.Integer" value="6379" />
  </bean>

  <reference id="schemaService" interface="org.opendaylight.controller.sal.core.api.model.SchemaService" />
  <bean id="nodeNormalizedUtils" class="org.cmcc.aero.impl.utils.NodeNormalizedCodecUtils">
    <argument ref="schemaService" />
    <argument ref="classLoadingStrategy" />
  </bean>

  <bean id="ofStoreService" class="org.cmcc.aero.impl.ofRpcs.cache.OFStoreServiceImpl"
    factory-method="createStoreService">
    <argument ref="redisSvc" />
    <argument ref="nodeNormalizedUtils" />
  </bean>

  <bean id="ofRpcUtils" class="org.cmcc.aero.impl.ofRpcs.OfRpcUtils">
    <argument ref="nodeNormalizedUtils" />
  </bean>

  <bean id="globalFlowFwdServiceImpl" class="org.cmcc.aero.impl.ofRpcs.impl.OFFwdServiceImpl"
        factory-method="createInstance">
    <argument ref="ofOwnerManager"/>
    <argument ref="batchFlowService"/>
    <argument ref="batchGroupService"/>
    <argument ref="batchMeterService"/>
    <argument ref="ofRpcUtils" />
  </bean>

  <bean id="globalFlowRpcService" class="org.cmcc.aero.impl.ofRpcs.impl.GlobalFlowRpcServiceImpl">
    <argument ref="globalFlowFwdServiceImpl"/>
    <argument ref="globalRpcClient"/>
    <argument ref="ofStoreService" />
    <argument ref="ofRpcUtils" />
  </bean>

  <service ref="globalFlowRpcService" interface="org.cmcc.aero.impl.ofRpcs.api.GlobalFlowRpcService"
           odl:type="aero"/>

  <bean id="testApp" class="org.cmcc.aero.impl.ofRpcs.app.GlobalFlowRpcSvcApp"
        init-method="init" destroy-method="close">
    <argument ref="dataBroker" />
    <argument ref="rpcRegistry" />
    <argument ref="globalFlowRpcService" />
  </bean>
</blueprint>
